import {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';import {Component, Inject, OnInit} from '@angular/core';import {Editor} from "@tiptap/core";import StarterKit from "@tiptap/starter-kit";import {Underline} from "@tiptap/extension-underline";import {Superscript} from "@tiptap/extension-superscript";import {Subscript} from "@tiptap/extension-subscript";import {Color} from "@tiptap/extension-color";import {TextStyle} from "@tiptap/extension-text-style";@Component({  templateUrl: './edit-text.component.html',  styleUrls: ['./edit-text.component.scss']})export class EditTextComponent implements OnInit {  editor: Editor = new Editor({extensions: [StarterKit]});  selectedFontColor: string = '';  constructor(    private dialogRef: MatDialogRef<EditTextComponent>,    @Inject(MAT_DIALOG_DATA) public data: any) { }  ngOnInit(): void {    const tipTapElement = document.querySelector('.tip-tap-element');    if (tipTapElement) {      this.editor = new Editor({        element: tipTapElement,        extensions: [          StarterKit, Underline, Superscript, Subscript, Color, TextStyle        ],        content: this.data.text      });      setTimeout(() => {        this.editor.commands.focus();      }, 500);    }  }  save() {    this.dialogRef.close(this.editor.getHTML());  }  toggleBold(): void {    this.editor.chain().toggleBold().focus().run();  }  toggleItalic(): void {    this.editor.chain().toggleItalic().focus().run();  }  toggleUnderline(): void {    this.editor.chain().toggleUnderline().focus().run();  }  toggleStrike(): void {    this.editor.commands.toggleStrike();  }  toggleSuperscript(): void {    this.editor.chain().toggleSuperscript().focus().run();  }  toggleSubscript(): void {    this.editor.chain().toggleSubscript().focus().run();  }  applyFontColor(): void {    this.editor.chain().focus().setColor(this.selectedFontColor).run();  }}